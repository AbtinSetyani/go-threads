// source: api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.api.pb.ModelCreateReply', null, global);
goog.exportSymbol('proto.api.pb.ModelCreateRequest', null, global);
goog.exportSymbol('proto.api.pb.ModelDeleteReply', null, global);
goog.exportSymbol('proto.api.pb.ModelDeleteRequest', null, global);
goog.exportSymbol('proto.api.pb.ModelFindByIDReply', null, global);
goog.exportSymbol('proto.api.pb.ModelFindByIDRequest', null, global);
goog.exportSymbol('proto.api.pb.ModelFindReply', null, global);
goog.exportSymbol('proto.api.pb.ModelFindRequest', null, global);
goog.exportSymbol('proto.api.pb.ModelHasReply', null, global);
goog.exportSymbol('proto.api.pb.ModelHasRequest', null, global);
goog.exportSymbol('proto.api.pb.ModelSaveReply', null, global);
goog.exportSymbol('proto.api.pb.ModelSaveRequest', null, global);
goog.exportSymbol('proto.api.pb.NewStoreReply', null, global);
goog.exportSymbol('proto.api.pb.NewStoreRequest', null, global);
goog.exportSymbol('proto.api.pb.ReadTransactionReply', null, global);
goog.exportSymbol('proto.api.pb.ReadTransactionReply.OptionCase', null, global);
goog.exportSymbol('proto.api.pb.ReadTransactionRequest', null, global);
goog.exportSymbol('proto.api.pb.ReadTransactionRequest.OptionCase', null, global);
goog.exportSymbol('proto.api.pb.RegisterSchemaReply', null, global);
goog.exportSymbol('proto.api.pb.RegisterSchemaRequest', null, global);
goog.exportSymbol('proto.api.pb.StartTransactionRequest', null, global);
goog.exportSymbol('proto.api.pb.WriteTransactionReply', null, global);
goog.exportSymbol('proto.api.pb.WriteTransactionReply.OptionCase', null, global);
goog.exportSymbol('proto.api.pb.WriteTransactionRequest', null, global);
goog.exportSymbol('proto.api.pb.WriteTransactionRequest.OptionCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.NewStoreRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.NewStoreRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.NewStoreRequest.displayName = 'proto.api.pb.NewStoreRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.NewStoreReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.NewStoreReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.NewStoreReply.displayName = 'proto.api.pb.NewStoreReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.RegisterSchemaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.RegisterSchemaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.RegisterSchemaRequest.displayName = 'proto.api.pb.RegisterSchemaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.RegisterSchemaReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.RegisterSchemaReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.RegisterSchemaReply.displayName = 'proto.api.pb.RegisterSchemaReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ModelCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.pb.ModelCreateRequest.repeatedFields_, null);
};
goog.inherits(proto.api.pb.ModelCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ModelCreateRequest.displayName = 'proto.api.pb.ModelCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ModelCreateReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.pb.ModelCreateReply.repeatedFields_, null);
};
goog.inherits(proto.api.pb.ModelCreateReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ModelCreateReply.displayName = 'proto.api.pb.ModelCreateReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ModelSaveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.pb.ModelSaveRequest.repeatedFields_, null);
};
goog.inherits(proto.api.pb.ModelSaveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ModelSaveRequest.displayName = 'proto.api.pb.ModelSaveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ModelSaveReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.ModelSaveReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ModelSaveReply.displayName = 'proto.api.pb.ModelSaveReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ModelDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.ModelDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ModelDeleteRequest.displayName = 'proto.api.pb.ModelDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ModelDeleteReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.ModelDeleteReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ModelDeleteReply.displayName = 'proto.api.pb.ModelDeleteReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ModelHasRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.ModelHasRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ModelHasRequest.displayName = 'proto.api.pb.ModelHasRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ModelHasReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.ModelHasReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ModelHasReply.displayName = 'proto.api.pb.ModelHasReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ModelFindRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.ModelFindRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ModelFindRequest.displayName = 'proto.api.pb.ModelFindRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ModelFindReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.ModelFindReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ModelFindReply.displayName = 'proto.api.pb.ModelFindReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ModelFindByIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.ModelFindByIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ModelFindByIDRequest.displayName = 'proto.api.pb.ModelFindByIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ModelFindByIDReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.ModelFindByIDReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ModelFindByIDReply.displayName = 'proto.api.pb.ModelFindByIDReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.StartTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.pb.StartTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.StartTransactionRequest.displayName = 'proto.api.pb.StartTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ReadTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.pb.ReadTransactionRequest.oneofGroups_);
};
goog.inherits(proto.api.pb.ReadTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ReadTransactionRequest.displayName = 'proto.api.pb.ReadTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.ReadTransactionReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.pb.ReadTransactionReply.oneofGroups_);
};
goog.inherits(proto.api.pb.ReadTransactionReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.ReadTransactionReply.displayName = 'proto.api.pb.ReadTransactionReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.WriteTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.pb.WriteTransactionRequest.oneofGroups_);
};
goog.inherits(proto.api.pb.WriteTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.WriteTransactionRequest.displayName = 'proto.api.pb.WriteTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.pb.WriteTransactionReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.pb.WriteTransactionReply.oneofGroups_);
};
goog.inherits(proto.api.pb.WriteTransactionReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api.pb.WriteTransactionReply.displayName = 'proto.api.pb.WriteTransactionReply';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.NewStoreRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.NewStoreRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.NewStoreRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.NewStoreRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.NewStoreRequest}
 */
proto.api.pb.NewStoreRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.NewStoreRequest;
  return proto.api.pb.NewStoreRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.NewStoreRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.NewStoreRequest}
 */
proto.api.pb.NewStoreRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.NewStoreRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.NewStoreRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.NewStoreRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.NewStoreRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.NewStoreReply.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.NewStoreReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.NewStoreReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.NewStoreReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.NewStoreReply}
 */
proto.api.pb.NewStoreReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.NewStoreReply;
  return proto.api.pb.NewStoreReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.NewStoreReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.NewStoreReply}
 */
proto.api.pb.NewStoreReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.NewStoreReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.NewStoreReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.NewStoreReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.NewStoreReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.api.pb.NewStoreReply.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.NewStoreReply} returns this
 */
proto.api.pb.NewStoreReply.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.RegisterSchemaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.RegisterSchemaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.RegisterSchemaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.RegisterSchemaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    schema: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.RegisterSchemaRequest}
 */
proto.api.pb.RegisterSchemaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.RegisterSchemaRequest;
  return proto.api.pb.RegisterSchemaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.RegisterSchemaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.RegisterSchemaRequest}
 */
proto.api.pb.RegisterSchemaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchema(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.RegisterSchemaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.RegisterSchemaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.RegisterSchemaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.RegisterSchemaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSchema();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string storeID = 1;
 * @return {string}
 */
proto.api.pb.RegisterSchemaRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.RegisterSchemaRequest} returns this
 */
proto.api.pb.RegisterSchemaRequest.prototype.setStoreid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.pb.RegisterSchemaRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.RegisterSchemaRequest} returns this
 */
proto.api.pb.RegisterSchemaRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string schema = 3;
 * @return {string}
 */
proto.api.pb.RegisterSchemaRequest.prototype.getSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.RegisterSchemaRequest} returns this
 */
proto.api.pb.RegisterSchemaRequest.prototype.setSchema = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.RegisterSchemaReply.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.RegisterSchemaReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.RegisterSchemaReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.RegisterSchemaReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.RegisterSchemaReply}
 */
proto.api.pb.RegisterSchemaReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.RegisterSchemaReply;
  return proto.api.pb.RegisterSchemaReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.RegisterSchemaReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.RegisterSchemaReply}
 */
proto.api.pb.RegisterSchemaReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.RegisterSchemaReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.RegisterSchemaReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.RegisterSchemaReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.RegisterSchemaReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.pb.ModelCreateRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ModelCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ModelCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ModelCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    valuesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ModelCreateRequest}
 */
proto.api.pb.ModelCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ModelCreateRequest;
  return proto.api.pb.ModelCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ModelCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ModelCreateRequest}
 */
proto.api.pb.ModelCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ModelCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ModelCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ModelCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string storeID = 1;
 * @return {string}
 */
proto.api.pb.ModelCreateRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelCreateRequest} returns this
 */
proto.api.pb.ModelCreateRequest.prototype.setStoreid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string modelName = 2;
 * @return {string}
 */
proto.api.pb.ModelCreateRequest.prototype.getModelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelCreateRequest} returns this
 */
proto.api.pb.ModelCreateRequest.prototype.setModelname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string values = 3;
 * @return {!Array<string>}
 */
proto.api.pb.ModelCreateRequest.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.pb.ModelCreateRequest} returns this
 */
proto.api.pb.ModelCreateRequest.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.pb.ModelCreateRequest} returns this
 */
proto.api.pb.ModelCreateRequest.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.pb.ModelCreateRequest} returns this
 */
proto.api.pb.ModelCreateRequest.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.pb.ModelCreateReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ModelCreateReply.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ModelCreateReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ModelCreateReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelCreateReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    entitiesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ModelCreateReply}
 */
proto.api.pb.ModelCreateReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ModelCreateReply;
  return proto.api.pb.ModelCreateReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ModelCreateReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ModelCreateReply}
 */
proto.api.pb.ModelCreateReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ModelCreateReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ModelCreateReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ModelCreateReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelCreateReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string entities = 1;
 * @return {!Array<string>}
 */
proto.api.pb.ModelCreateReply.prototype.getEntitiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.pb.ModelCreateReply} returns this
 */
proto.api.pb.ModelCreateReply.prototype.setEntitiesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.pb.ModelCreateReply} returns this
 */
proto.api.pb.ModelCreateReply.prototype.addEntities = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.pb.ModelCreateReply} returns this
 */
proto.api.pb.ModelCreateReply.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.pb.ModelSaveRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ModelSaveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ModelSaveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ModelSaveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelSaveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    valuesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ModelSaveRequest}
 */
proto.api.pb.ModelSaveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ModelSaveRequest;
  return proto.api.pb.ModelSaveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ModelSaveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ModelSaveRequest}
 */
proto.api.pb.ModelSaveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ModelSaveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ModelSaveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ModelSaveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelSaveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string storeID = 1;
 * @return {string}
 */
proto.api.pb.ModelSaveRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelSaveRequest} returns this
 */
proto.api.pb.ModelSaveRequest.prototype.setStoreid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string modelName = 2;
 * @return {string}
 */
proto.api.pb.ModelSaveRequest.prototype.getModelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelSaveRequest} returns this
 */
proto.api.pb.ModelSaveRequest.prototype.setModelname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string values = 3;
 * @return {!Array<string>}
 */
proto.api.pb.ModelSaveRequest.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.api.pb.ModelSaveRequest} returns this
 */
proto.api.pb.ModelSaveRequest.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.api.pb.ModelSaveRequest} returns this
 */
proto.api.pb.ModelSaveRequest.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.api.pb.ModelSaveRequest} returns this
 */
proto.api.pb.ModelSaveRequest.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ModelSaveReply.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ModelSaveReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ModelSaveReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelSaveReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ModelSaveReply}
 */
proto.api.pb.ModelSaveReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ModelSaveReply;
  return proto.api.pb.ModelSaveReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ModelSaveReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ModelSaveReply}
 */
proto.api.pb.ModelSaveReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ModelSaveReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ModelSaveReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ModelSaveReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelSaveReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ModelDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ModelDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ModelDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    entityid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ModelDeleteRequest}
 */
proto.api.pb.ModelDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ModelDeleteRequest;
  return proto.api.pb.ModelDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ModelDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ModelDeleteRequest}
 */
proto.api.pb.ModelDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ModelDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ModelDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ModelDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string storeID = 1;
 * @return {string}
 */
proto.api.pb.ModelDeleteRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelDeleteRequest} returns this
 */
proto.api.pb.ModelDeleteRequest.prototype.setStoreid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string modelName = 2;
 * @return {string}
 */
proto.api.pb.ModelDeleteRequest.prototype.getModelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelDeleteRequest} returns this
 */
proto.api.pb.ModelDeleteRequest.prototype.setModelname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string entityID = 3;
 * @return {string}
 */
proto.api.pb.ModelDeleteRequest.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelDeleteRequest} returns this
 */
proto.api.pb.ModelDeleteRequest.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ModelDeleteReply.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ModelDeleteReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ModelDeleteReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelDeleteReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ModelDeleteReply}
 */
proto.api.pb.ModelDeleteReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ModelDeleteReply;
  return proto.api.pb.ModelDeleteReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ModelDeleteReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ModelDeleteReply}
 */
proto.api.pb.ModelDeleteReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ModelDeleteReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ModelDeleteReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ModelDeleteReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelDeleteReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ModelHasRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ModelHasRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ModelHasRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelHasRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    entityid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ModelHasRequest}
 */
proto.api.pb.ModelHasRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ModelHasRequest;
  return proto.api.pb.ModelHasRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ModelHasRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ModelHasRequest}
 */
proto.api.pb.ModelHasRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ModelHasRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ModelHasRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ModelHasRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelHasRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string storeID = 1;
 * @return {string}
 */
proto.api.pb.ModelHasRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelHasRequest} returns this
 */
proto.api.pb.ModelHasRequest.prototype.setStoreid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string modelName = 2;
 * @return {string}
 */
proto.api.pb.ModelHasRequest.prototype.getModelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelHasRequest} returns this
 */
proto.api.pb.ModelHasRequest.prototype.setModelname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string entityID = 3;
 * @return {string}
 */
proto.api.pb.ModelHasRequest.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelHasRequest} returns this
 */
proto.api.pb.ModelHasRequest.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ModelHasReply.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ModelHasReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ModelHasReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelHasReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    exists: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ModelHasReply}
 */
proto.api.pb.ModelHasReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ModelHasReply;
  return proto.api.pb.ModelHasReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ModelHasReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ModelHasReply}
 */
proto.api.pb.ModelHasReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ModelHasReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ModelHasReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ModelHasReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelHasReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExists();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool exists = 1;
 * @return {boolean}
 */
proto.api.pb.ModelHasReply.prototype.getExists = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.api.pb.ModelHasReply} returns this
 */
proto.api.pb.ModelHasReply.prototype.setExists = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ModelFindRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ModelFindRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ModelFindRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelFindRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelname: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ModelFindRequest}
 */
proto.api.pb.ModelFindRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ModelFindRequest;
  return proto.api.pb.ModelFindRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ModelFindRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ModelFindRequest}
 */
proto.api.pb.ModelFindRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ModelFindRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ModelFindRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ModelFindRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelFindRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string storeID = 1;
 * @return {string}
 */
proto.api.pb.ModelFindRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelFindRequest} returns this
 */
proto.api.pb.ModelFindRequest.prototype.setStoreid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string modelName = 2;
 * @return {string}
 */
proto.api.pb.ModelFindRequest.prototype.getModelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelFindRequest} returns this
 */
proto.api.pb.ModelFindRequest.prototype.setModelname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ModelFindReply.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ModelFindReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ModelFindReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelFindReply.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ModelFindReply}
 */
proto.api.pb.ModelFindReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ModelFindReply;
  return proto.api.pb.ModelFindReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ModelFindReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ModelFindReply}
 */
proto.api.pb.ModelFindReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ModelFindReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ModelFindReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ModelFindReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelFindReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ModelFindByIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ModelFindByIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ModelFindByIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelFindByIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    entityid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ModelFindByIDRequest}
 */
proto.api.pb.ModelFindByIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ModelFindByIDRequest;
  return proto.api.pb.ModelFindByIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ModelFindByIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ModelFindByIDRequest}
 */
proto.api.pb.ModelFindByIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ModelFindByIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ModelFindByIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ModelFindByIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelFindByIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEntityid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string storeID = 1;
 * @return {string}
 */
proto.api.pb.ModelFindByIDRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelFindByIDRequest} returns this
 */
proto.api.pb.ModelFindByIDRequest.prototype.setStoreid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string modelName = 2;
 * @return {string}
 */
proto.api.pb.ModelFindByIDRequest.prototype.getModelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelFindByIDRequest} returns this
 */
proto.api.pb.ModelFindByIDRequest.prototype.setModelname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string entityID = 3;
 * @return {string}
 */
proto.api.pb.ModelFindByIDRequest.prototype.getEntityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelFindByIDRequest} returns this
 */
proto.api.pb.ModelFindByIDRequest.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ModelFindByIDReply.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ModelFindByIDReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ModelFindByIDReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelFindByIDReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    entity: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ModelFindByIDReply}
 */
proto.api.pb.ModelFindByIDReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ModelFindByIDReply;
  return proto.api.pb.ModelFindByIDReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ModelFindByIDReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ModelFindByIDReply}
 */
proto.api.pb.ModelFindByIDReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ModelFindByIDReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ModelFindByIDReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ModelFindByIDReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ModelFindByIDReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string entity = 1;
 * @return {string}
 */
proto.api.pb.ModelFindByIDReply.prototype.getEntity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.ModelFindByIDReply} returns this
 */
proto.api.pb.ModelFindByIDReply.prototype.setEntity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.StartTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.StartTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.StartTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.StartTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    storeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modelname: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.StartTransactionRequest}
 */
proto.api.pb.StartTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.StartTransactionRequest;
  return proto.api.pb.StartTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.StartTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.StartTransactionRequest}
 */
proto.api.pb.StartTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStoreid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.StartTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.StartTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.StartTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.StartTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStoreid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModelname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string storeID = 1;
 * @return {string}
 */
proto.api.pb.StartTransactionRequest.prototype.getStoreid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.StartTransactionRequest} returns this
 */
proto.api.pb.StartTransactionRequest.prototype.setStoreid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string modelName = 2;
 * @return {string}
 */
proto.api.pb.StartTransactionRequest.prototype.getModelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api.pb.StartTransactionRequest} returns this
 */
proto.api.pb.StartTransactionRequest.prototype.setModelname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.pb.ReadTransactionRequest.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.api.pb.ReadTransactionRequest.OptionCase = {
  OPTION_NOT_SET: 0,
  STARTTRANSACTIONREQUEST: 1,
  MODELHASREQUEST: 2,
  MODELFINDREQUEST: 3,
  MODELFINDBYIDREQUEST: 4
};

/**
 * @return {proto.api.pb.ReadTransactionRequest.OptionCase}
 */
proto.api.pb.ReadTransactionRequest.prototype.getOptionCase = function() {
  return /** @type {proto.api.pb.ReadTransactionRequest.OptionCase} */(jspb.Message.computeOneofCase(this, proto.api.pb.ReadTransactionRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ReadTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ReadTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ReadTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ReadTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    starttransactionrequest: (f = msg.getStarttransactionrequest()) && proto.api.pb.StartTransactionRequest.toObject(includeInstance, f),
    modelhasrequest: (f = msg.getModelhasrequest()) && proto.api.pb.ModelHasRequest.toObject(includeInstance, f),
    modelfindrequest: (f = msg.getModelfindrequest()) && proto.api.pb.ModelFindRequest.toObject(includeInstance, f),
    modelfindbyidrequest: (f = msg.getModelfindbyidrequest()) && proto.api.pb.ModelFindByIDRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ReadTransactionRequest}
 */
proto.api.pb.ReadTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ReadTransactionRequest;
  return proto.api.pb.ReadTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ReadTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ReadTransactionRequest}
 */
proto.api.pb.ReadTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.pb.StartTransactionRequest;
      reader.readMessage(value,proto.api.pb.StartTransactionRequest.deserializeBinaryFromReader);
      msg.setStarttransactionrequest(value);
      break;
    case 2:
      var value = new proto.api.pb.ModelHasRequest;
      reader.readMessage(value,proto.api.pb.ModelHasRequest.deserializeBinaryFromReader);
      msg.setModelhasrequest(value);
      break;
    case 3:
      var value = new proto.api.pb.ModelFindRequest;
      reader.readMessage(value,proto.api.pb.ModelFindRequest.deserializeBinaryFromReader);
      msg.setModelfindrequest(value);
      break;
    case 4:
      var value = new proto.api.pb.ModelFindByIDRequest;
      reader.readMessage(value,proto.api.pb.ModelFindByIDRequest.deserializeBinaryFromReader);
      msg.setModelfindbyidrequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ReadTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ReadTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ReadTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ReadTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStarttransactionrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.pb.StartTransactionRequest.serializeBinaryToWriter
    );
  }
  f = message.getModelhasrequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.pb.ModelHasRequest.serializeBinaryToWriter
    );
  }
  f = message.getModelfindrequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.pb.ModelFindRequest.serializeBinaryToWriter
    );
  }
  f = message.getModelfindbyidrequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.pb.ModelFindByIDRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional StartTransactionRequest startTransactionRequest = 1;
 * @return {?proto.api.pb.StartTransactionRequest}
 */
proto.api.pb.ReadTransactionRequest.prototype.getStarttransactionrequest = function() {
  return /** @type{?proto.api.pb.StartTransactionRequest} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.StartTransactionRequest, 1));
};


/**
 * @param {?proto.api.pb.StartTransactionRequest|undefined} value
 * @return {!proto.api.pb.ReadTransactionRequest} returns this
*/
proto.api.pb.ReadTransactionRequest.prototype.setStarttransactionrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api.pb.ReadTransactionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.ReadTransactionRequest} returns this
 */
proto.api.pb.ReadTransactionRequest.prototype.clearStarttransactionrequest = function() {
  return this.setStarttransactionrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.ReadTransactionRequest.prototype.hasStarttransactionrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ModelHasRequest modelHasRequest = 2;
 * @return {?proto.api.pb.ModelHasRequest}
 */
proto.api.pb.ReadTransactionRequest.prototype.getModelhasrequest = function() {
  return /** @type{?proto.api.pb.ModelHasRequest} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelHasRequest, 2));
};


/**
 * @param {?proto.api.pb.ModelHasRequest|undefined} value
 * @return {!proto.api.pb.ReadTransactionRequest} returns this
*/
proto.api.pb.ReadTransactionRequest.prototype.setModelhasrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api.pb.ReadTransactionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.ReadTransactionRequest} returns this
 */
proto.api.pb.ReadTransactionRequest.prototype.clearModelhasrequest = function() {
  return this.setModelhasrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.ReadTransactionRequest.prototype.hasModelhasrequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ModelFindRequest modelFindRequest = 3;
 * @return {?proto.api.pb.ModelFindRequest}
 */
proto.api.pb.ReadTransactionRequest.prototype.getModelfindrequest = function() {
  return /** @type{?proto.api.pb.ModelFindRequest} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelFindRequest, 3));
};


/**
 * @param {?proto.api.pb.ModelFindRequest|undefined} value
 * @return {!proto.api.pb.ReadTransactionRequest} returns this
*/
proto.api.pb.ReadTransactionRequest.prototype.setModelfindrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api.pb.ReadTransactionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.ReadTransactionRequest} returns this
 */
proto.api.pb.ReadTransactionRequest.prototype.clearModelfindrequest = function() {
  return this.setModelfindrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.ReadTransactionRequest.prototype.hasModelfindrequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ModelFindByIDRequest modelFindByIDRequest = 4;
 * @return {?proto.api.pb.ModelFindByIDRequest}
 */
proto.api.pb.ReadTransactionRequest.prototype.getModelfindbyidrequest = function() {
  return /** @type{?proto.api.pb.ModelFindByIDRequest} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelFindByIDRequest, 4));
};


/**
 * @param {?proto.api.pb.ModelFindByIDRequest|undefined} value
 * @return {!proto.api.pb.ReadTransactionRequest} returns this
*/
proto.api.pb.ReadTransactionRequest.prototype.setModelfindbyidrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api.pb.ReadTransactionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.ReadTransactionRequest} returns this
 */
proto.api.pb.ReadTransactionRequest.prototype.clearModelfindbyidrequest = function() {
  return this.setModelfindbyidrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.ReadTransactionRequest.prototype.hasModelfindbyidrequest = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.pb.ReadTransactionReply.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.api.pb.ReadTransactionReply.OptionCase = {
  OPTION_NOT_SET: 0,
  MODELHASREPLY: 1,
  MODELFINDREPLY: 2,
  MODELFINDBYIDREPLY: 3
};

/**
 * @return {proto.api.pb.ReadTransactionReply.OptionCase}
 */
proto.api.pb.ReadTransactionReply.prototype.getOptionCase = function() {
  return /** @type {proto.api.pb.ReadTransactionReply.OptionCase} */(jspb.Message.computeOneofCase(this, proto.api.pb.ReadTransactionReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.ReadTransactionReply.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.ReadTransactionReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.ReadTransactionReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ReadTransactionReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelhasreply: (f = msg.getModelhasreply()) && proto.api.pb.ModelHasReply.toObject(includeInstance, f),
    modelfindreply: (f = msg.getModelfindreply()) && proto.api.pb.ModelFindReply.toObject(includeInstance, f),
    modelfindbyidreply: (f = msg.getModelfindbyidreply()) && proto.api.pb.ModelFindByIDReply.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.ReadTransactionReply}
 */
proto.api.pb.ReadTransactionReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.ReadTransactionReply;
  return proto.api.pb.ReadTransactionReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.ReadTransactionReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.ReadTransactionReply}
 */
proto.api.pb.ReadTransactionReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.pb.ModelHasReply;
      reader.readMessage(value,proto.api.pb.ModelHasReply.deserializeBinaryFromReader);
      msg.setModelhasreply(value);
      break;
    case 2:
      var value = new proto.api.pb.ModelFindReply;
      reader.readMessage(value,proto.api.pb.ModelFindReply.deserializeBinaryFromReader);
      msg.setModelfindreply(value);
      break;
    case 3:
      var value = new proto.api.pb.ModelFindByIDReply;
      reader.readMessage(value,proto.api.pb.ModelFindByIDReply.deserializeBinaryFromReader);
      msg.setModelfindbyidreply(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.ReadTransactionReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.ReadTransactionReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.ReadTransactionReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.ReadTransactionReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelhasreply();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.pb.ModelHasReply.serializeBinaryToWriter
    );
  }
  f = message.getModelfindreply();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.pb.ModelFindReply.serializeBinaryToWriter
    );
  }
  f = message.getModelfindbyidreply();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.pb.ModelFindByIDReply.serializeBinaryToWriter
    );
  }
};


/**
 * optional ModelHasReply modelHasReply = 1;
 * @return {?proto.api.pb.ModelHasReply}
 */
proto.api.pb.ReadTransactionReply.prototype.getModelhasreply = function() {
  return /** @type{?proto.api.pb.ModelHasReply} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelHasReply, 1));
};


/**
 * @param {?proto.api.pb.ModelHasReply|undefined} value
 * @return {!proto.api.pb.ReadTransactionReply} returns this
*/
proto.api.pb.ReadTransactionReply.prototype.setModelhasreply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api.pb.ReadTransactionReply.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.ReadTransactionReply} returns this
 */
proto.api.pb.ReadTransactionReply.prototype.clearModelhasreply = function() {
  return this.setModelhasreply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.ReadTransactionReply.prototype.hasModelhasreply = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ModelFindReply modelFindReply = 2;
 * @return {?proto.api.pb.ModelFindReply}
 */
proto.api.pb.ReadTransactionReply.prototype.getModelfindreply = function() {
  return /** @type{?proto.api.pb.ModelFindReply} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelFindReply, 2));
};


/**
 * @param {?proto.api.pb.ModelFindReply|undefined} value
 * @return {!proto.api.pb.ReadTransactionReply} returns this
*/
proto.api.pb.ReadTransactionReply.prototype.setModelfindreply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api.pb.ReadTransactionReply.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.ReadTransactionReply} returns this
 */
proto.api.pb.ReadTransactionReply.prototype.clearModelfindreply = function() {
  return this.setModelfindreply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.ReadTransactionReply.prototype.hasModelfindreply = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ModelFindByIDReply modelFindByIDReply = 3;
 * @return {?proto.api.pb.ModelFindByIDReply}
 */
proto.api.pb.ReadTransactionReply.prototype.getModelfindbyidreply = function() {
  return /** @type{?proto.api.pb.ModelFindByIDReply} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelFindByIDReply, 3));
};


/**
 * @param {?proto.api.pb.ModelFindByIDReply|undefined} value
 * @return {!proto.api.pb.ReadTransactionReply} returns this
*/
proto.api.pb.ReadTransactionReply.prototype.setModelfindbyidreply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api.pb.ReadTransactionReply.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.ReadTransactionReply} returns this
 */
proto.api.pb.ReadTransactionReply.prototype.clearModelfindbyidreply = function() {
  return this.setModelfindbyidreply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.ReadTransactionReply.prototype.hasModelfindbyidreply = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.pb.WriteTransactionRequest.oneofGroups_ = [[1,2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.api.pb.WriteTransactionRequest.OptionCase = {
  OPTION_NOT_SET: 0,
  STARTTRANSACTIONREQUEST: 1,
  MODELCREATEREQUEST: 2,
  MODELSAVEREQUEST: 3,
  MODELDELETEREQUEST: 4,
  MODELHASREQUEST: 5,
  MODELFINDREQUEST: 6,
  MODELFINDBYIDREQUEST: 7
};

/**
 * @return {proto.api.pb.WriteTransactionRequest.OptionCase}
 */
proto.api.pb.WriteTransactionRequest.prototype.getOptionCase = function() {
  return /** @type {proto.api.pb.WriteTransactionRequest.OptionCase} */(jspb.Message.computeOneofCase(this, proto.api.pb.WriteTransactionRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.WriteTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.WriteTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.WriteTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.WriteTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    starttransactionrequest: (f = msg.getStarttransactionrequest()) && proto.api.pb.StartTransactionRequest.toObject(includeInstance, f),
    modelcreaterequest: (f = msg.getModelcreaterequest()) && proto.api.pb.ModelCreateRequest.toObject(includeInstance, f),
    modelsaverequest: (f = msg.getModelsaverequest()) && proto.api.pb.ModelSaveRequest.toObject(includeInstance, f),
    modeldeleterequest: (f = msg.getModeldeleterequest()) && proto.api.pb.ModelDeleteRequest.toObject(includeInstance, f),
    modelhasrequest: (f = msg.getModelhasrequest()) && proto.api.pb.ModelHasRequest.toObject(includeInstance, f),
    modelfindrequest: (f = msg.getModelfindrequest()) && proto.api.pb.ModelFindRequest.toObject(includeInstance, f),
    modelfindbyidrequest: (f = msg.getModelfindbyidrequest()) && proto.api.pb.ModelFindByIDRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.WriteTransactionRequest}
 */
proto.api.pb.WriteTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.WriteTransactionRequest;
  return proto.api.pb.WriteTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.WriteTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.WriteTransactionRequest}
 */
proto.api.pb.WriteTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.pb.StartTransactionRequest;
      reader.readMessage(value,proto.api.pb.StartTransactionRequest.deserializeBinaryFromReader);
      msg.setStarttransactionrequest(value);
      break;
    case 2:
      var value = new proto.api.pb.ModelCreateRequest;
      reader.readMessage(value,proto.api.pb.ModelCreateRequest.deserializeBinaryFromReader);
      msg.setModelcreaterequest(value);
      break;
    case 3:
      var value = new proto.api.pb.ModelSaveRequest;
      reader.readMessage(value,proto.api.pb.ModelSaveRequest.deserializeBinaryFromReader);
      msg.setModelsaverequest(value);
      break;
    case 4:
      var value = new proto.api.pb.ModelDeleteRequest;
      reader.readMessage(value,proto.api.pb.ModelDeleteRequest.deserializeBinaryFromReader);
      msg.setModeldeleterequest(value);
      break;
    case 5:
      var value = new proto.api.pb.ModelHasRequest;
      reader.readMessage(value,proto.api.pb.ModelHasRequest.deserializeBinaryFromReader);
      msg.setModelhasrequest(value);
      break;
    case 6:
      var value = new proto.api.pb.ModelFindRequest;
      reader.readMessage(value,proto.api.pb.ModelFindRequest.deserializeBinaryFromReader);
      msg.setModelfindrequest(value);
      break;
    case 7:
      var value = new proto.api.pb.ModelFindByIDRequest;
      reader.readMessage(value,proto.api.pb.ModelFindByIDRequest.deserializeBinaryFromReader);
      msg.setModelfindbyidrequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.WriteTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.WriteTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.WriteTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.WriteTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStarttransactionrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.pb.StartTransactionRequest.serializeBinaryToWriter
    );
  }
  f = message.getModelcreaterequest();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.pb.ModelCreateRequest.serializeBinaryToWriter
    );
  }
  f = message.getModelsaverequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.pb.ModelSaveRequest.serializeBinaryToWriter
    );
  }
  f = message.getModeldeleterequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.pb.ModelDeleteRequest.serializeBinaryToWriter
    );
  }
  f = message.getModelhasrequest();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.pb.ModelHasRequest.serializeBinaryToWriter
    );
  }
  f = message.getModelfindrequest();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api.pb.ModelFindRequest.serializeBinaryToWriter
    );
  }
  f = message.getModelfindbyidrequest();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.api.pb.ModelFindByIDRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional StartTransactionRequest startTransactionRequest = 1;
 * @return {?proto.api.pb.StartTransactionRequest}
 */
proto.api.pb.WriteTransactionRequest.prototype.getStarttransactionrequest = function() {
  return /** @type{?proto.api.pb.StartTransactionRequest} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.StartTransactionRequest, 1));
};


/**
 * @param {?proto.api.pb.StartTransactionRequest|undefined} value
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
*/
proto.api.pb.WriteTransactionRequest.prototype.setStarttransactionrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api.pb.WriteTransactionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
 */
proto.api.pb.WriteTransactionRequest.prototype.clearStarttransactionrequest = function() {
  return this.setStarttransactionrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.WriteTransactionRequest.prototype.hasStarttransactionrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ModelCreateRequest modelCreateRequest = 2;
 * @return {?proto.api.pb.ModelCreateRequest}
 */
proto.api.pb.WriteTransactionRequest.prototype.getModelcreaterequest = function() {
  return /** @type{?proto.api.pb.ModelCreateRequest} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelCreateRequest, 2));
};


/**
 * @param {?proto.api.pb.ModelCreateRequest|undefined} value
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
*/
proto.api.pb.WriteTransactionRequest.prototype.setModelcreaterequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api.pb.WriteTransactionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
 */
proto.api.pb.WriteTransactionRequest.prototype.clearModelcreaterequest = function() {
  return this.setModelcreaterequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.WriteTransactionRequest.prototype.hasModelcreaterequest = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ModelSaveRequest modelSaveRequest = 3;
 * @return {?proto.api.pb.ModelSaveRequest}
 */
proto.api.pb.WriteTransactionRequest.prototype.getModelsaverequest = function() {
  return /** @type{?proto.api.pb.ModelSaveRequest} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelSaveRequest, 3));
};


/**
 * @param {?proto.api.pb.ModelSaveRequest|undefined} value
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
*/
proto.api.pb.WriteTransactionRequest.prototype.setModelsaverequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api.pb.WriteTransactionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
 */
proto.api.pb.WriteTransactionRequest.prototype.clearModelsaverequest = function() {
  return this.setModelsaverequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.WriteTransactionRequest.prototype.hasModelsaverequest = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ModelDeleteRequest modelDeleteRequest = 4;
 * @return {?proto.api.pb.ModelDeleteRequest}
 */
proto.api.pb.WriteTransactionRequest.prototype.getModeldeleterequest = function() {
  return /** @type{?proto.api.pb.ModelDeleteRequest} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelDeleteRequest, 4));
};


/**
 * @param {?proto.api.pb.ModelDeleteRequest|undefined} value
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
*/
proto.api.pb.WriteTransactionRequest.prototype.setModeldeleterequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api.pb.WriteTransactionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
 */
proto.api.pb.WriteTransactionRequest.prototype.clearModeldeleterequest = function() {
  return this.setModeldeleterequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.WriteTransactionRequest.prototype.hasModeldeleterequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ModelHasRequest modelHasRequest = 5;
 * @return {?proto.api.pb.ModelHasRequest}
 */
proto.api.pb.WriteTransactionRequest.prototype.getModelhasrequest = function() {
  return /** @type{?proto.api.pb.ModelHasRequest} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelHasRequest, 5));
};


/**
 * @param {?proto.api.pb.ModelHasRequest|undefined} value
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
*/
proto.api.pb.WriteTransactionRequest.prototype.setModelhasrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.api.pb.WriteTransactionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
 */
proto.api.pb.WriteTransactionRequest.prototype.clearModelhasrequest = function() {
  return this.setModelhasrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.WriteTransactionRequest.prototype.hasModelhasrequest = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ModelFindRequest modelFindRequest = 6;
 * @return {?proto.api.pb.ModelFindRequest}
 */
proto.api.pb.WriteTransactionRequest.prototype.getModelfindrequest = function() {
  return /** @type{?proto.api.pb.ModelFindRequest} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelFindRequest, 6));
};


/**
 * @param {?proto.api.pb.ModelFindRequest|undefined} value
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
*/
proto.api.pb.WriteTransactionRequest.prototype.setModelfindrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.api.pb.WriteTransactionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
 */
proto.api.pb.WriteTransactionRequest.prototype.clearModelfindrequest = function() {
  return this.setModelfindrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.WriteTransactionRequest.prototype.hasModelfindrequest = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ModelFindByIDRequest modelFindByIDRequest = 7;
 * @return {?proto.api.pb.ModelFindByIDRequest}
 */
proto.api.pb.WriteTransactionRequest.prototype.getModelfindbyidrequest = function() {
  return /** @type{?proto.api.pb.ModelFindByIDRequest} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelFindByIDRequest, 7));
};


/**
 * @param {?proto.api.pb.ModelFindByIDRequest|undefined} value
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
*/
proto.api.pb.WriteTransactionRequest.prototype.setModelfindbyidrequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.api.pb.WriteTransactionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.WriteTransactionRequest} returns this
 */
proto.api.pb.WriteTransactionRequest.prototype.clearModelfindbyidrequest = function() {
  return this.setModelfindbyidrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.WriteTransactionRequest.prototype.hasModelfindbyidrequest = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.pb.WriteTransactionReply.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.api.pb.WriteTransactionReply.OptionCase = {
  OPTION_NOT_SET: 0,
  MODELCREATEREPLY: 1,
  MODELSAVEREPLY: 2,
  MODELDELETEREPLY: 3,
  MODELHASREPLY: 4,
  MODELFINDREPLY: 5,
  MODELFINDBYIDREPLY: 6
};

/**
 * @return {proto.api.pb.WriteTransactionReply.OptionCase}
 */
proto.api.pb.WriteTransactionReply.prototype.getOptionCase = function() {
  return /** @type {proto.api.pb.WriteTransactionReply.OptionCase} */(jspb.Message.computeOneofCase(this, proto.api.pb.WriteTransactionReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.pb.WriteTransactionReply.prototype.toObject = function(opt_includeInstance) {
  return proto.api.pb.WriteTransactionReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.pb.WriteTransactionReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.WriteTransactionReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelcreatereply: (f = msg.getModelcreatereply()) && proto.api.pb.ModelCreateReply.toObject(includeInstance, f),
    modelsavereply: (f = msg.getModelsavereply()) && proto.api.pb.ModelSaveReply.toObject(includeInstance, f),
    modeldeletereply: (f = msg.getModeldeletereply()) && proto.api.pb.ModelDeleteReply.toObject(includeInstance, f),
    modelhasreply: (f = msg.getModelhasreply()) && proto.api.pb.ModelHasReply.toObject(includeInstance, f),
    modelfindreply: (f = msg.getModelfindreply()) && proto.api.pb.ModelFindReply.toObject(includeInstance, f),
    modelfindbyidreply: (f = msg.getModelfindbyidreply()) && proto.api.pb.ModelFindByIDReply.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.pb.WriteTransactionReply}
 */
proto.api.pb.WriteTransactionReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.pb.WriteTransactionReply;
  return proto.api.pb.WriteTransactionReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.pb.WriteTransactionReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.pb.WriteTransactionReply}
 */
proto.api.pb.WriteTransactionReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.pb.ModelCreateReply;
      reader.readMessage(value,proto.api.pb.ModelCreateReply.deserializeBinaryFromReader);
      msg.setModelcreatereply(value);
      break;
    case 2:
      var value = new proto.api.pb.ModelSaveReply;
      reader.readMessage(value,proto.api.pb.ModelSaveReply.deserializeBinaryFromReader);
      msg.setModelsavereply(value);
      break;
    case 3:
      var value = new proto.api.pb.ModelDeleteReply;
      reader.readMessage(value,proto.api.pb.ModelDeleteReply.deserializeBinaryFromReader);
      msg.setModeldeletereply(value);
      break;
    case 4:
      var value = new proto.api.pb.ModelHasReply;
      reader.readMessage(value,proto.api.pb.ModelHasReply.deserializeBinaryFromReader);
      msg.setModelhasreply(value);
      break;
    case 5:
      var value = new proto.api.pb.ModelFindReply;
      reader.readMessage(value,proto.api.pb.ModelFindReply.deserializeBinaryFromReader);
      msg.setModelfindreply(value);
      break;
    case 6:
      var value = new proto.api.pb.ModelFindByIDReply;
      reader.readMessage(value,proto.api.pb.ModelFindByIDReply.deserializeBinaryFromReader);
      msg.setModelfindbyidreply(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.pb.WriteTransactionReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.pb.WriteTransactionReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.pb.WriteTransactionReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.pb.WriteTransactionReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelcreatereply();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.pb.ModelCreateReply.serializeBinaryToWriter
    );
  }
  f = message.getModelsavereply();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.pb.ModelSaveReply.serializeBinaryToWriter
    );
  }
  f = message.getModeldeletereply();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.pb.ModelDeleteReply.serializeBinaryToWriter
    );
  }
  f = message.getModelhasreply();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.pb.ModelHasReply.serializeBinaryToWriter
    );
  }
  f = message.getModelfindreply();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.pb.ModelFindReply.serializeBinaryToWriter
    );
  }
  f = message.getModelfindbyidreply();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api.pb.ModelFindByIDReply.serializeBinaryToWriter
    );
  }
};


/**
 * optional ModelCreateReply modelCreateReply = 1;
 * @return {?proto.api.pb.ModelCreateReply}
 */
proto.api.pb.WriteTransactionReply.prototype.getModelcreatereply = function() {
  return /** @type{?proto.api.pb.ModelCreateReply} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelCreateReply, 1));
};


/**
 * @param {?proto.api.pb.ModelCreateReply|undefined} value
 * @return {!proto.api.pb.WriteTransactionReply} returns this
*/
proto.api.pb.WriteTransactionReply.prototype.setModelcreatereply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.api.pb.WriteTransactionReply.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.WriteTransactionReply} returns this
 */
proto.api.pb.WriteTransactionReply.prototype.clearModelcreatereply = function() {
  return this.setModelcreatereply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.WriteTransactionReply.prototype.hasModelcreatereply = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ModelSaveReply modelSaveReply = 2;
 * @return {?proto.api.pb.ModelSaveReply}
 */
proto.api.pb.WriteTransactionReply.prototype.getModelsavereply = function() {
  return /** @type{?proto.api.pb.ModelSaveReply} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelSaveReply, 2));
};


/**
 * @param {?proto.api.pb.ModelSaveReply|undefined} value
 * @return {!proto.api.pb.WriteTransactionReply} returns this
*/
proto.api.pb.WriteTransactionReply.prototype.setModelsavereply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.api.pb.WriteTransactionReply.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.WriteTransactionReply} returns this
 */
proto.api.pb.WriteTransactionReply.prototype.clearModelsavereply = function() {
  return this.setModelsavereply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.WriteTransactionReply.prototype.hasModelsavereply = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ModelDeleteReply modelDeleteReply = 3;
 * @return {?proto.api.pb.ModelDeleteReply}
 */
proto.api.pb.WriteTransactionReply.prototype.getModeldeletereply = function() {
  return /** @type{?proto.api.pb.ModelDeleteReply} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelDeleteReply, 3));
};


/**
 * @param {?proto.api.pb.ModelDeleteReply|undefined} value
 * @return {!proto.api.pb.WriteTransactionReply} returns this
*/
proto.api.pb.WriteTransactionReply.prototype.setModeldeletereply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.api.pb.WriteTransactionReply.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.WriteTransactionReply} returns this
 */
proto.api.pb.WriteTransactionReply.prototype.clearModeldeletereply = function() {
  return this.setModeldeletereply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.WriteTransactionReply.prototype.hasModeldeletereply = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ModelHasReply modelHasReply = 4;
 * @return {?proto.api.pb.ModelHasReply}
 */
proto.api.pb.WriteTransactionReply.prototype.getModelhasreply = function() {
  return /** @type{?proto.api.pb.ModelHasReply} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelHasReply, 4));
};


/**
 * @param {?proto.api.pb.ModelHasReply|undefined} value
 * @return {!proto.api.pb.WriteTransactionReply} returns this
*/
proto.api.pb.WriteTransactionReply.prototype.setModelhasreply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.api.pb.WriteTransactionReply.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.WriteTransactionReply} returns this
 */
proto.api.pb.WriteTransactionReply.prototype.clearModelhasreply = function() {
  return this.setModelhasreply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.WriteTransactionReply.prototype.hasModelhasreply = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ModelFindReply modelFindReply = 5;
 * @return {?proto.api.pb.ModelFindReply}
 */
proto.api.pb.WriteTransactionReply.prototype.getModelfindreply = function() {
  return /** @type{?proto.api.pb.ModelFindReply} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelFindReply, 5));
};


/**
 * @param {?proto.api.pb.ModelFindReply|undefined} value
 * @return {!proto.api.pb.WriteTransactionReply} returns this
*/
proto.api.pb.WriteTransactionReply.prototype.setModelfindreply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.api.pb.WriteTransactionReply.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.WriteTransactionReply} returns this
 */
proto.api.pb.WriteTransactionReply.prototype.clearModelfindreply = function() {
  return this.setModelfindreply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.WriteTransactionReply.prototype.hasModelfindreply = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ModelFindByIDReply modelFindByIDReply = 6;
 * @return {?proto.api.pb.ModelFindByIDReply}
 */
proto.api.pb.WriteTransactionReply.prototype.getModelfindbyidreply = function() {
  return /** @type{?proto.api.pb.ModelFindByIDReply} */ (
    jspb.Message.getWrapperField(this, proto.api.pb.ModelFindByIDReply, 6));
};


/**
 * @param {?proto.api.pb.ModelFindByIDReply|undefined} value
 * @return {!proto.api.pb.WriteTransactionReply} returns this
*/
proto.api.pb.WriteTransactionReply.prototype.setModelfindbyidreply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.api.pb.WriteTransactionReply.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.api.pb.WriteTransactionReply} returns this
 */
proto.api.pb.WriteTransactionReply.prototype.clearModelfindbyidreply = function() {
  return this.setModelfindbyidreply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api.pb.WriteTransactionReply.prototype.hasModelfindbyidreply = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.api.pb);
