syntax = "proto3";
package threads.pb;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/textileio/go-textile/pb/message.proto";

option (gogoproto.benchgen_all) = true;
option (gogoproto.populate_all) = true;

message Index {
	string id = 1;
	bytes key = 2;
	string name = 3;
	string heads = 4;
}

message Indexes {
	repeated Index items = 1;
}

message NodeIndex {
	string id = 1;
	string thread = 2;
	string author = 3;
	Type type = 4;
	google.protobuf.Timestamp date = 5;
	repeated string parents = 6;
	string target = 7;
	string data = 8;
	Status status = 9;
	int32 attempts = 10;

	enum Type {
		INVITE = 0;
		JOIN = 1;
		LEAVE = 2;
		WRITE = 3;
		REACT = 4;
		REMOVE = 5;
	}

	enum Status {
		READY = 0; // downloaded, also synced if outbound
		QUEUED = 1; // waiting on sync
		PENDING = 2; // waiting on download
	}
}

message NodeIndexes {
	repeated NodeIndex items = 1;
}

message Roles {
	Role default = 1;
	map<string, Role> accounts = 2;

	enum Role {
		NO_ACCESS = 0;
		READ = 1;
		ANNOTATE = 2;
		WRITE = 3;
	}
}

message Member {
	string id = 1;
	string thread = 2;
	bool welcomed = 3;
}

message SchemaNode {
	string name = 1;
	bool pin = 2;
	bool plaintext = 3;
	string mill = 4;
	map<string, string> opts = 5;
	google.protobuf.Struct json_schema = 6;
	map<string, SchemaLink> links = 7;
}

message SchemaLink {
	string use = 1;
	bool pin = 2;
	bool plaintext = 3;
	string mill = 4;
	map<string, string> opts = 5;
	google.protobuf.Struct json_schema = 6;
}

message NodeMessage {
	string id = 1;
	string peer = 2;
	Envelope env = 3;
	google.protobuf.Timestamp date = 4;
}
